v2.
{<<"/Users/marcbey/github/voting_service/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.App.beam">>,
 'Elixir.DBConnection.App',module,<<"lib/db_connection/app.ex">>,
 ['Elixir.Application','Elixir.Module','Elixir.Supervisor.Spec',
  'Elixir.Kernel'],
 ['Elixir.DBConnection.Task','Elixir.DBConnection.Sojourn.Supervisor',
  'Elixir.DBConnection.Ownership.PoolSupervisor','Elixir.Supervisor'],
 [],nil}.
{<<"/Users/marcbey/github/voting_service/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Error.beam">>,
 'Elixir.DBConnection.Error',module,<<"lib/db_connection/error.ex">>,
 ['Elixir.Map','Elixir.Protocol','Elixir.Kernel.Typespec','Elixir.Module',
  erlang,'Elixir.Kernel.Utils','Elixir.String','Elixir.Kernel',
  'Elixir.Keyword','Elixir.Exception'],
 [],[],nil}.
{<<"/Users/marcbey/github/voting_service/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.LogEntry.beam">>,
 'Elixir.DBConnection.LogEntry',module,<<"lib/db_connection/log_entry.ex">>,
 ['Elixir.Protocol','Elixir.Kernel.Typespec','Elixir.Module',
  'Elixir.Kernel.Utils','Elixir.Kernel'],
 [erlang,'Elixir.Enum'],
 [],nil}.
{<<"/Users/marcbey/github/voting_service/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Backoff.beam">>,
 'Elixir.DBConnection.Backoff',module,<<"lib/db_connection/backoff.ex">>,
 ['Elixir.Protocol','Elixir.Module','Elixir.Kernel.Utils','Elixir.Bitwise',
  'Elixir.Kernel'],
 ['Elixir.String.Chars','Elixir.Access','Elixir.Process',erlang,application,
  random,'Elixir.Keyword',rand,'Elixir.ArgumentError',os,'Elixir.Enum'],
 [],nil}.
{<<"/Users/marcbey/github/voting_service/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Ownership.OwnerSupervisor.beam">>,
 'Elixir.DBConnection.Ownership.OwnerSupervisor',module,
 <<"lib/db_connection/ownership/owner_supervisor.ex">>,
 ['Elixir.Supervisor.Spec','Elixir.Kernel'],
 ['Elixir.DBConnection.Ownership.Owner',erlang,'Elixir.Supervisor'],
 [],nil}.
{<<"/Users/marcbey/github/voting_service/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Ownership.Pool.beam">>,
 'Elixir.DBConnection.Ownership.Pool',module,
 <<"lib/db_connection/ownership/pool.ex">>,
 ['Elixir.Module','Elixir.Supervisor.Spec','Elixir.Kernel'],
 ['Elixir.String.Chars','Elixir.RuntimeError',
  'Elixir.DBConnection.Ownership.OwnerSupervisor','Elixir.List',erlang,
  'Elixir.DBConnection.Watcher','Elixir.DBConnection','Elixir.Supervisor'],
 [],nil}.
{<<"/Users/marcbey/github/voting_service/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Ownership.Manager.beam">>,
 'Elixir.DBConnection.Ownership.Manager',module,
 <<"lib/db_connection/ownership/manager.ex">>,
 ['Elixir.Kernel.Typespec','Elixir.GenServer','Elixir.Module','Elixir.Kernel',
  'Elixir.Keyword'],
 [ets,'Elixir.DBConnection.Ownership.OwnerSupervisor',
  'Elixir.DBConnection.Poolboy','Elixir.Map',
  'Elixir.DBConnection.Ownership.Owner','Elixir.Access','Elixir.List',
  'Elixir.DBConnection.Ownership.PoolSupervisor','Elixir.Process',erlang,
  'Elixir.Enum'],
 [],nil}.
{<<"/Users/marcbey/github/voting_service/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Ownership.PoolSupervisor.beam">>,
 'Elixir.DBConnection.Ownership.PoolSupervisor',module,
 <<"lib/db_connection/ownership/pool_supervisor.ex">>,
 ['Elixir.Module','Elixir.Supervisor.Spec','Elixir.Kernel'],
 [erlang,'Elixir.DBConnection.Ownership.Pool','Elixir.Supervisor'],
 [],nil}.
{<<"/Users/marcbey/github/voting_service/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Pool.beam">>,
 'Elixir.DBConnection.Pool',module,<<"lib/db_connection/pool.ex">>,
 ['Elixir.Kernel.Typespec','Elixir.GenServer','Elixir.Module',
  'Elixir.Supervisor.Spec','Elixir.Kernel','Elixir.Keyword',
  'Elixir.Exception'],
 [],[],nil}.
{<<"/Users/marcbey/github/voting_service/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Ownership.Owner.beam">>,
 'Elixir.DBConnection.Ownership.Owner',module,
 <<"lib/db_connection/ownership/owner.ex">>,
 ['Elixir.GenServer','Elixir.Module','Elixir.Kernel'],
 [queue,'Elixir.String.Chars','Elixir.System','Elixir.DBConnection.Poolboy',
  'Elixir.Access','Elixir.DBConnection.Error','Elixir.Process',erlang,
  'Elixir.Keyword','Elixir.ArgumentError'],
 [],nil}.
{<<"/Users/marcbey/github/voting_service/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Ownership.beam">>,
 'Elixir.DBConnection.Ownership',module,<<"lib/db_connection/ownership.ex">>,
 ['Elixir.String.Chars','Elixir.DBConnection.Pool','Elixir.List',
  'Elixir.Kernel.Typespec','Elixir.GenServer','Elixir.Module',erlang,
  'Elixir.Kernel.Utils','Elixir.DBConnection.Ownership.Manager',
  'Elixir.Kernel','Elixir.Keyword','Elixir.ArgumentError'],
 ['Elixir.RuntimeError','Elixir.DBConnection.Ownership.Owner',
  'Elixir.Supervisor.Spec'],
 [],nil}.
{<<"/Users/marcbey/github/voting_service/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Poolboy.Worker.beam">>,
 'Elixir.DBConnection.Poolboy.Worker',module,
 <<"lib/db_connection/poolboy/worker.ex">>,
 ['Elixir.Kernel'],
 ['Elixir.DBConnection.Connection'],
 [],nil}.
{<<"/Users/marcbey/github/voting_service/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Poolboy.beam">>,
 'Elixir.DBConnection.Poolboy',module,<<"lib/db_connection/poolboy.ex">>,
 ['Elixir.DBConnection.Pool','Elixir.Module','Elixir.Kernel'],
 ['Elixir.DBConnection.Poolboy.Worker','Elixir.DBConnection.Connection',
  'Elixir.DBConnection.Error',erlang,'Elixir.Keyword',poolboy],
 [],nil}.
{<<"/Users/marcbey/github/voting_service/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Connection.beam">>,
 'Elixir.DBConnection.Connection',module,
 <<"lib/db_connection/connection.ex">>,
 ['Elixir.Connection','Elixir.DBConnection.Pool','Elixir.Logger',
  'Elixir.Module','Elixir.Kernel'],
 ['Elixir.DBConnection.Task',queue,'Elixir.String.Chars',
  'Elixir.RuntimeError','Elixir.Access','Elixir.DBConnection.Error',
  'Elixir.Process',erlang,'Elixir.Supervisor.Spec','Elixir.Keyword',
  'Elixir.DBConnection.Backoff','Elixir.ArgumentError','Elixir.Exception',
  sbroker],
 [],nil}.
{<<"/Users/marcbey/github/voting_service/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.beam">>,
 'Elixir.DBConnection',module,<<"lib/db_connection.ex">>,
 ['Elixir.Protocol','Elixir.Kernel.Typespec','Elixir.GenServer',
  'Elixir.Module','Elixir.Supervisor.Spec','Elixir.Kernel.Utils',
  'Elixir.Kernel','Elixir.Keyword','Elixir.Exception'],
 ['Elixir.String.Chars','Elixir.RuntimeError','Elixir.System',
  'Elixir.DBConnection.Connection','Elixir.DBConnection.Error','Elixir.Tuple',
  'Elixir.Process',erlang,'Elixir.DBConnection.Query','Elixir.ArgumentError',
  'Elixir.DBConnection.LogEntry'],
 [],nil}.
{<<"/Users/marcbey/github/voting_service/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.beam">>,
 'Elixir.DBConnection.Sojourn',module,<<"lib/db_connection/sojourn.ex">>,
 ['Elixir.String.Chars','Elixir.DBConnection.Pool',
  'Elixir.DBConnection.Connection','Elixir.List','Elixir.Module',erlang,
  'Elixir.Supervisor.Spec','Elixir.Kernel.Utils','Elixir.Kernel',
  'Elixir.Keyword','Elixir.ArgumentError',
  'Elixir.DBConnection.Sojourn.Timeout'],
 ['Elixir.DBConnection.Sojourn.Broker','Elixir.DBConnection.Error',sbroker],
 [],nil}.
{<<"/Users/marcbey/github/voting_service/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Query.beam">>,
 'Elixir.DBConnection.Query',protocol,<<"lib/db_connection/query.ex">>,
 [lists,'Elixir.Protocol','Elixir.Kernel.Typespec','Elixir.Module',erlang,
  'Elixir.Kernel','Elixir.Keyword'],
 ['Elixir.DBConnection.Query.BitString','Elixir.DBConnection.Query.Tuple',
  'Elixir.DBConnection.Query.Float','Elixir.DBConnection.Query.List',
  'Elixir.DBConnection.Query.Integer','Elixir.DBConnection.Query.Map',
  'Elixir.Code','Elixir.DBConnection.Query.Reference',
  'Elixir.DBConnection.Query.PID','Elixir.DBConnection.Query.Port',
  'Elixir.DBConnection.Query.Atom','Elixir.DBConnection.Query.Function',
  'Elixir.Protocol.UndefinedError'],
 [],nil}.
{<<"/Users/marcbey/github/voting_service/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.Pool.beam">>,
 'Elixir.DBConnection.Sojourn.Pool',module,
 <<"lib/db_connection/sojourn/pool.ex">>,
 ['Elixir.Module','Elixir.Supervisor.Spec','Elixir.Kernel'],
 ['Elixir.DBConnection.Sojourn.Starter','Elixir.DBConnection.Connection',
  erlang,'Elixir.DBConnection.Watcher','Elixir.Supervisor','Elixir.Keyword'],
 [],nil}.
{<<"/Users/marcbey/github/voting_service/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.Broker.beam">>,
 'Elixir.DBConnection.Sojourn.Broker',module,
 <<"lib/db_connection/sojourn/broker.ex">>,
 ['Elixir.Module',erlang,'Elixir.Code','Elixir.Kernel'],
 ['Elixir.DBConnection.Sojourn.Supervisor','Elixir.Process','Elixir.Keyword'],
 [],nil}.
{<<"/Users/marcbey/github/voting_service/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.Supervisor.beam">>,
 'Elixir.DBConnection.Sojourn.Supervisor',module,
 <<"lib/db_connection/sojourn/supervisor.ex">>,
 ['Elixir.Module','Elixir.Supervisor.Spec','Elixir.Kernel'],
 [erlang,'Elixir.Supervisor','Elixir.DBConnection.Sojourn.Pool'],
 [],nil}.
{<<"/Users/marcbey/github/voting_service/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.Timeout.beam">>,
 'Elixir.DBConnection.Sojourn.Timeout',module,
 <<"lib/db_connection/sojourn/timeout.ex">>,
 ['Elixir.Module',erlang,'Elixir.Code','Elixir.Kernel'],
 ['Elixir.Keyword'],
 [],nil}.
{<<"/Users/marcbey/github/voting_service/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Sojourn.Starter.beam">>,
 'Elixir.DBConnection.Sojourn.Starter',module,
 <<"lib/db_connection/sojourn/starter.ex">>,
 ['Elixir.Connection','Elixir.Module','Elixir.Kernel'],
 ['Elixir.List',erlang,'Elixir.Supervisor','Elixir.Keyword'],
 [],nil}.
{<<"/Users/marcbey/github/voting_service/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Watcher.beam">>,
 'Elixir.DBConnection.Watcher',module,<<"lib/db_connection/watcher.ex">>,
 ['Elixir.GenServer','Elixir.Module','Elixir.Kernel'],
 ['Elixir.Process',erlang],
 [],nil}.
{<<"/Users/marcbey/github/voting_service/_build/dev/lib/db_connection/ebin/Elixir.DBConnection.Task.beam">>,
 'Elixir.DBConnection.Task',module,<<"lib/db_connection/task.ex">>,
 ['Elixir.String.Chars','Elixir.DBConnection.Connection','Elixir.List',
  'Elixir.Module',erlang,'Elixir.Kernel.Utils','Elixir.Kernel',
  'Elixir.Keyword','Elixir.ArgumentError'],
 ['Elixir.Process','Elixir.Task.Supervisor','Elixir.DBConnection'],
 [],nil}.
